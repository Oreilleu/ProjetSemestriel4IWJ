{# Composant delete form, permet de gérer la suppression de toute les entity via un form/button #}
{# Il prends en paramètre : 
    - item_id : correspond à l'id de l'item à supprimer
    - path : chemin du controller de suppression
    - classForm: permet de gérer le style de la balise <form></form> (peut être null)
    - classButton: permet de gérer le style de la balise <button></button> du formulaire (peut être null)
    - labelButton: label de la balise <button></button> du formulaire
    - title: label la balise <h3></h3> de la modale
    - content: contenu de la modale 
#}

<form id="confirmationForm-{{ item_id }}" method="post" class="{{ classForm|default('') }}" action="{{ path('app_' ~ path ~ '_delete', { id: item_id }) }}">
    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ item_id) }}">
    <button class="{{ classButton|default('') }}">{{ labelButton|raw }}</button>
</form>

<div id="confirmationModal-{{ item_id }}" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
    <div class="relative p-4 w-full max-w-2xl max-h-full">
        <div class="relative bg-white rounded-lg shadow dark:bg-element-dark-mode-950">
            <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:bg-element-dark-mode-600">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-text-dark-mode-200">{{ title }}</h3>
                <button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-element-dark-mode-600 dark:hover:text-text-dark-mode-200" id="closeModalButton">
                    {{ include('components/SVG/_cross_SVG.html.twig') }}
                    <span class="sr-only">Fermer la modal</span>
                </button>
            </div>
            <div class="p-4 md:p-5 space-y-4">
                <p class="text-base leading-relaxed text-gray-500 dark:text-text-dark-mode-200 dark:hover:bg-element-dark-mode400">{{ content }}</p>
            </div>
            <div class="flex items-center p-4 md:p-5 border-t border-gray-200 rounded-b dark:border-element-dark-mode-600">
                <button type="button" class="mr-3 py-2.5 px-5 ms-3 text-sm font-medium focus:outline-none bg-white rounded-lg border border-color3-200 hover:bg-color3-100 hover:text-color3-700 focus:z-10 focus:ring-4 focus:ring-color3-100 dark:bg-element-dark-mode-600 dark:text-text-dark-mode-200 dark:border-element-dark-mode-400 dark:hover:text-text-dark-mode-200 dark:hover:bg-element-dark-mode-900" id="cancelButton">Annuler</button>
                <button type="submit" class="text-white bg-color3-700 hover:bg-color3-800 focus:ring-4 focus:outline-none focus:ring-color3-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-element-dark-mode-600 dark:text-text-dark-mode-200 dark:border-element-dark-mode-400 dark:hover:text-text-dark-mode-200 dark:hover:bg-element-dark-mode-900" id="confirmButton">Accepter</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('confirmationForm-{{ item_id }}');
        const modal = document.getElementById('confirmationModal-{{ item_id }}');

        const cancelButton = modal.querySelector('#cancelButton');
        const confirmButton = modal.querySelector('#confirmButton');
        const crossModal = modal.querySelector('#closeModalButton');

        const closeModal = () => {
            modal.classList.add('hidden');         
            modal.classList.remove('flex');     
        }

        const openModal = () => {
            modal.classList.remove('hidden');
            modal.classList.add('flex');
        }

        form.addEventListener('submit', (event) => {
            event.preventDefault(); 
            openModal();
        });

        cancelButton.addEventListener('click', () => {
            closeModal();
        });

        crossModal.addEventListener('click', () => {
            closeModal();
        });

        confirmButton.addEventListener('click', () => {
            form.submit();
        });
    });
</script>